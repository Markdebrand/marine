# ---- Etapa 1: Compilación del frontend (Build Stage) ----
FROM node:20-alpine AS build-stage

WORKDIR /app

# Copia los archivos de configuración de dependencias para aprovechar el caché de Docker
COPY package*.json ./

# Instala las dependencias de npm
RUN npm install

# Copia el resto del código del frontend
COPY . .

# Permitir inyectar la URL de API en build si es necesario
ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

# Compila y exporta estático para servir con Nginx
RUN npm run build && npx next export

# ---- Etapa 2: Servir con Nginx (Production Stage) ----
FROM nginx:1.27-alpine

# Copia los archivos estáticos exportados de la etapa anterior
COPY --from=build-stage /app/out /usr/share/nginx/html

# Copia el archivo de configuración de Nginx para producción
COPY nginx.conf.frontend /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]