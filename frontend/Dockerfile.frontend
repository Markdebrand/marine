# ---- Etapa 1: Compilación del frontend (Build Stage) ----
FROM node:18-alpine AS build-stage

WORKDIR /app

# Copia los archivos de configuración de dependencias para aprovechar el caché de Docker
COPY package*.json ./

# Instala las dependencias de npm
RUN npm install

# Copia el resto del código del frontend
COPY . .

# Compila la aplicación para generar los archivos estáticos
RUN npm run build

# ---- Etapa 2: Servir con Nginx (Production Stage) ----
FROM nginx:1.25.1-alpine

# Copia los archivos estáticos compilados de la etapa anterior
COPY --from=build-stage /app/dist /usr/share/nginx/html

# Copia el archivo de configuración de Nginx para producción
COPY nginx.conf.frontend /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]