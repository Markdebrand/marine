version: "3.8"

services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci"
    ]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    ports:
      - "127.0.0.1:3306:3306"  # Solo accesible desde el host (t√∫nel SSH recomendado)
    networks:
      - app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    env_file:
      - ./envs/variables.env.production
    environment:
      # Database (use service name 'db')
      DB_PROFILE: prod
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      # Security / JWT
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_AUDIENCE: ${JWT_AUDIENCE}

      # CORS / Hosts
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CORS_ORIGINS: ${CORS_ORIGINS}

      # Odoo
      ODOO_URL: ${ODOO_URL}
      ODOO_DB: ${ODOO_DB}
      ODOO_USER: ${ODOO_USER}
      ODOO_PASSWORD: ${ODOO_PASSWORD}

      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}

      # App URLs
      FRONTEND_URL: ${FRONTEND_URL}

      # SMTP / Email
      EMAIL_SENDER: ${EMAIL_SENDER}
      EMAIL_TO: ${EMAIL_TO}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_TLS: ${SMTP_TLS}
      SMTP_SSL: ${SMTP_SSL}

      # Microsoft Translator
      MS_TRANSLATOR_KEY: ${MS_TRANSLATOR_KEY}
      MS_TRANSLATOR_REGION: ${MS_TRANSLATOR_REGION}

    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request, sys; r=urllib.request.urlopen('http://127.0.0.1:8000/api/healthz'); sys.exit(0)\""]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    env_file:
      - ./envs/variables.env.production
    depends_on:
      - backend
    networks:
      - app

networks:
  app: {}

volumes:
  mysql_data: {}
