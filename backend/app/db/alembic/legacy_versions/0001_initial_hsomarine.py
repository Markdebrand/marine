"""initial hsomarine models

Revision ID: 0001_initial_hsomarine
Revises: 
Create Date: 2025-10-10 00:00:00.000000
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0001_initial_hsomarine'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - initial tables ###
    op.create_table('res_user',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('login', sa.String(length=128), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.UniqueConstraint('login', name=op.f('uq_res_user_login'))
    )

    op.create_index(op.f('ix_res_user_login'), 'res_user', ['login'], unique=False)
    op.create_index(op.f('ix_res_user_email'), 'res_user', ['email'], unique=False)

    op.create_table('marine_port',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('unlocode', sa.String(length=16), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('country', sa.String(length=128), nullable=True),
        sa.Column('ext_refs', sa.Text(), nullable=True),
        sa.Column('coords', sa.String(length=64), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.UniqueConstraint('unlocode', name=op.f('uq_marine_port_unlocode'))
    )

    op.create_index(op.f('ix_marine_port_unlocode_name'), 'marine_port', ['unlocode', 'name'], unique=False)

    op.create_table('marine_vessel',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('mmsi', sa.String(length=16), nullable=False),
        sa.Column('imo', sa.String(length=16), nullable=True),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('type', sa.String(length=64), nullable=True),
        sa.Column('flag', sa.String(length=64), nullable=True),
        sa.Column('ext_refs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.UniqueConstraint('mmsi', name=op.f('uq_marine_vessel_mmsi')),
        sa.UniqueConstraint('imo', name=op.f('uq_marine_vessel_imo'))
    )

    op.create_index(op.f('ix_marine_vessel_mmsi'), 'marine_vessel', ['mmsi'], unique=False)
    op.create_index(op.f('ix_marine_vessel_imo'), 'marine_vessel', ['imo'], unique=False)

    op.create_table('vessel_state',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('mmsi', sa.String(length=16), nullable=False),
        sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
        sa.Column('geom', sa.Text(), nullable=True),
        sa.Column('sog', sa.Float(), nullable=True),
        sa.Column('cog', sa.Float(), nullable=True),
        sa.Column('heading', sa.Float(), nullable=True),
        sa.Column('nav_status', sa.String(length=50), nullable=True),
        sa.Column('src', sa.String(length=64), nullable=True),
    )

    op.create_index(op.f('ix_vessel_state_mmsi_ts'), 'vessel_state', ['mmsi', 'ts'], unique=False)

    op.create_table('vessel_snapshot',
        sa.Column('mmsi', sa.String(length=16), primary_key=True),
        sa.Column('last_ts', sa.DateTime(timezone=True), nullable=False),
        sa.Column('last_geom', sa.Text(), nullable=True),
        sa.Column('sog', sa.Float(), nullable=True),
        sa.Column('cog', sa.Float(), nullable=True),
        sa.Column('heading', sa.Float(), nullable=True),
        sa.Column('nav_status', sa.String(length=50), nullable=True),
        sa.Column('latest_state_id', sa.Integer(), nullable=True),
    )

    op.create_table('marine_watchlist',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('vessel_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['res_user.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['vessel_id'], ['marine_vessel.id'], ondelete='CASCADE'),
        sa.UniqueConstraint('user_id', 'vessel_id', name=op.f('uq_watchlist_user_vessel'))
    )

    op.create_table('marine_alert',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(length=64), nullable=False),
        sa.Column('params_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('active', sa.Boolean(), nullable=False, server_default=sa.text('true')),
        sa.Column('last_triggered', sa.DateTime(timezone=True), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['res_user.id'], ondelete='CASCADE')
    )

    op.create_table('marine_provider_contract',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('provider', sa.String(length=128), nullable=False),
        sa.Column('plan', sa.String(length=128), nullable=True),
        sa.Column('rate_limits_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('retention_days', sa.Integer(), nullable=True),
        sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
        sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )

    op.create_table('marine_audit',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('actor_id', sa.Integer(), nullable=True),
        sa.Column('action', sa.String(length=255), nullable=True),
        sa.Column('details', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    )

    # ### end Alembic commands ###

    # Notas para el operador: si desea usar PostGIS/Timescale, correr los siguientes comandos manualmente:
    # -- Instalar PostGIS extension
    # CREATE EXTENSION IF NOT EXISTS postgis;
    # -- Convertir vessel_state.geom a geometry(Point, 4326) y crear Ã­ndice GiST
    # -- Crear hypertable (TimescaleDB)
    # SELECT create_hypertable('vessel_state', 'ts');


def downgrade() -> None:
    # ### commands auto generated by Alembic - drop tables ###
    op.drop_table('marine_audit')
    op.drop_table('marine_provider_contract')
    op.drop_table('marine_alert')
    op.drop_table('marine_watchlist')
    op.drop_table('vessel_snapshot')
    op.drop_table('vessel_state')
    op.drop_table('marine_vessel')
    op.drop_index(op.f('ix_marine_port_unlocode_name'), table_name='marine_port')
    op.drop_table('marine_port')
    op.drop_index(op.f('ix_res_user_email'), table_name='res_user')
    op.drop_index(op.f('ix_res_user_login'), table_name='res_user')
    op.drop_table('res_user')
    # ### end Alembic commands ###
